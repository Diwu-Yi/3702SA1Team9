show.legend = F) +
coord_polar(theta = "y") +
theme_void()+transition_time(iyear)
ggplot(terror.target, aes(x = 1, y = Count, fill = targtype1_txt))+
geom_col(position = 'fill',
show.legend = F) +
coord_polar(theta = "y") +
theme_void()+transition_time(iyear)+labs(fill='Target Type')
ggplot(terror.target, aes(x = "", y = Count, fill = targtype1_txt)) +
geom_col() +
coord_polar(theta = "y")+transition_time(iyear)+labs(fill='Target Type')
gplot(terror.target, aes(x = 1, y = Count, fill = targtype1_txt))+
geom_col(position = "fill",
show.legend = T) +
coord_polar(theta = "y") +
theme_void()+transition_time(iyear)+labs(fill='Target Type')
ggplot(terror.target, aes(x = 1, y = Count, fill = targtype1_txt))+
geom_col(position = "fill",
show.legend = T) +
coord_polar(theta = "y") +
theme_void()+transition_time(iyear)+labs(fill='Target Type')
library(tidyr)
library(tidyverse)
library(dplyr)
library(stringr)
library(readr)
library(ggmap)
library(ggplot2)
library(gganimate)
library(plotly)
library(leaflet)
library(leaflet.extras)
library(raster)
library(rgdal)
library(lubridate)
library(mapview)
library(rworldmap)
library(countrycode)
# data visualization
terror.countries <- terror.data %>% group_by(iyear,country_txt) %>% summarise(Count=n())
terror.countries$iso_code <- countrycode::countrycode(terror.countries$country_txt,origin = "country.name",destination = "iso3c")
terror.countries
# data visualization
Map  <- joinCountryData2Map(terror.countries, joinCode = "ISO3", nameJoinColumn = "iso_code")
mapCountryData(Map, nameColumnToPlot="Count", catMethod = "fixwidth",missingCountryCol = gray(.8))
# data cleaning
terror.attack <- terror.data %>% group_by(attacktype1_txt) %>% summarise(Kills = sum(nkill))
terror.attack
# data cleaning
terror.attack <- terror.data %>% group_by(iyear,attacktype1_txt) %>% summarise(Kills = sum(nkill))
terror.attack
unique(terror.data$attacktype1_txt)
# data cleaning
terror.city <- terror.data %>% group_by(city) %>% summarise(Kills = sum(nkill))
terror.city
unique(terror.data$city)
# data cleaning
terror.city <- terror.data %>% group_by(city) %>% summarise(Count=n())
terror.city
terror.data[terror.data$city=="A Coruna district",]
unique(terror.data$weaptype1_txt)
# data cleaning
terror.weapon <- terror.data %>% group_by(weaptype1_txt) %>% summarise(Kills=sum(nkill)/n())
terror.weapon
# data cleaning
terror.weapon <- terror.data %>% group_by(iyear,weaptype1_txt) %>% summarise(Kills=sum(nkill)/n())
terror.weapon
# data visualization
ggplot(terror.attack) + geom_line(aes(x=iyear,y=Kills,color=weaptype1_txt))
# data visualization
ggplot(terror.weapon) + geom_line(aes(x=iyear,y=Kills,color=weaptype1_txt))
# data cleaning
terror.weapon <- terror.data %>% group_by(iyear,weaptype1_txt) %>% summarise(count=n(),Kills=sum(nkill)/n()) %>% filter(count>5)
terror.weapon
# data visualization
ggplot(terror.weapon) + geom_line(aes(x=iyear,y=Kills,color=weaptype1_txt))
# data visualization
ggplot(terror.weapon) + geom_line(aes(x=iyear,y=Kills,color=weaptype1_txt))+facet_wrap(~weaptype1_txt)
# data cleaning
terror.weapon <- terror.data %>% group_by(weaptype1_txt) %>% summarise(count=n(),Kills=sum(nkill)/n()) %>% filter(count>5)
terror.weapon
# data visualization
ggplot(terror.weapon) + geom_bar(aes(x=weaptype1_txt,y=Kills),stat="identity",color="red")
# data visualization
ggplot(terror.weapon) + geom_bar(aes(x=weaptype1_txt,y=Kills),stat="identity",fill="red")
# data visualization
ggplot(terror.weapon) + geom_bar(aes(x=reorder(weaptype1_txt,Kills),y=Kills),stat="identity",fill="red")+coord_flip()
# data cleaning
terror.weapon <- terror.data %>% group_by(weaptype1_txt) %>% summarise(count=n(),Kills=sum(nkill)/n()) %>% filter(count>10)
terror.weapon
# data cleaning
terror.weapon <- terror.data %>% group_by(weaptype1_txt) %>% summarise(count=n(),averageKills=sum(nkill)/n()) %>% filter(count>10)
terror.weapon
# data visualization
ggplot(terror.weapon) + geom_bar(aes(x=reorder(weaptype1_txt,Kills),y=averageKills),stat="identity",fill="red")+coord_flip()
# data visualization
ggplot(terror.weapon) + geom_bar(aes(x=reorder(weaptype1_txt,averageKills),y=averageKills),stat="identity",fill="red")+coord_flip()
# data visualization
ggplot(terror.weapon) + geom_bar(aes(x=reorder(weaptype1_txt,averageKills),y=averageKills),stat="identity",fill="red")+coord_flip()+geom_text(aes(label = averageKills), hjust = 1.5, colour = "white")+xlab("Number of Kills per Attack")+ylab("Weapon Type")
# data visualization
ggplot(terror.weapon) + geom_bar(aes(x=reorder(weaptype1_txt,averageKills),y=averageKills),stat="identity",fill="red")+coord_flip()+xlab("Number of Kills per Attack")+ylab("Weapon Type")
# data visualization
ggplot(terror.weapon) + geom_bar(aes(x=reorder(weaptype1_txt,averageKills),y=averageKills),stat="identity",fill="red")+coord_flip()+xlab("Number of Kills per Attack")+ylab("Weapon Type")++geom_text(aes(label = averageKills))
# data visualization
ggplot(terror.weapon) + geom_bar(aes(x=reorder(weaptype1_txt,averageKills),y=averageKills),stat="identity",fill="red")+coord_flip()+xlab("Number of Kills per Attack")+ylab("Weapon Type")+geom_text(aes(label = averageKills))
# data visualization
ggplot(terror.weapon) + geom_bar(aes(x=reorder(weaptype1_txt,averageKills),y=averageKills),stat="identity",fill="red")+coord_flip()+xlab("Number of Kills per Attack")+ylab("Weapon Type")
library(tidyr)
library(tidyverse)
library(dplyr)
library(stringr)
library(readr)
library(ggmap)
library(ggplot2)
library(gganimate)
library(plotly)
library(leaflet)
library(leaflet.extras)
library(raster)
library(rgdal)
library(lubridate)
library(mapview)
library(rworldmap)
library(countrycode)
# load the original data sets
terror.data <- read.csv("/Users/elianasong/Desktop/y3s1/DBA3702/Test 2/TotalTerrorismDb.csv")
# data cleaning
terror.data$Date <- as.Date(paste(terror.data$iyear,terror.data$imonth,terror.data$iday,sep="-"))
terror.data$Weekdays <- weekdays(terror.data$Date)
terror.weekdays <- terror.data %>% group_by(Weekdays) %>% summarise(Count = n())
terror.weekdays$Ifweekdays <- ifelse(is.na(terror.weekdays$Weekdays),NA,ifelse(terror.weekdays$Weekdays%in%c("Monday","Tuesday","Wednesday","Thursday","Friday"),"Weekdays","Weekends"))
terror.weekdays <- terror.weekdays%>%slice(1:7)
terror.weekdays
# data visualization
terror.weekdays%>%ggplot()+geom_bar(aes(x=reorder(Weekdays,-Count),y=Count,fill=Ifweekdays),stat="identity")+xlab("Days of Week")+ylab("Number of Terrorism Activities")
# data cleaning
terror.data$region_txt <- as.factor(terror.data$region_txt)
terror.region <- terror.data %>% group_by(region_txt) %>% summarise(Count = n())
terror.region
# data visualization
ggplot(terror.region) + geom_bar(aes(x=reorder(region_txt,Count),y=Count,fill=region_txt),stat="identity")+xlab("Regions")+ylab("Number of Terrorism Activities")+coord_flip()
# data cleaning
terror.data$nkill[is.na(terror.data$nkill)]<-0
terror.data$nkillter[is.na(terror.data$nkillter)]<-0
terror.death<- terror.data %>% group_by(iyear) %>% summarise(Count=n(),Count.innocent.death=sum(nkill)-sum(nkillter))
terror.death
# data visualization
ggplot() +
stat_summary(data = terror.death, # PRIMARY
aes(x = iyear, y = Count),  # PRIMARY BAR CHART
geom = 'line',
group = 1,
colour = "green") +
stat_summary(data = terror.death, # SECONDARY
aes(x = iyear, y = Count.innocent.death),
geom = 'line',
group = 1,
colour = 'blue') +
labs(x="Year",y="Number of terrorism attacks")+scale_y_continuous(sec.axis = sec_axis(~.*1,name = "Number of innocent deaths"))
# data visualization
terror.countries <- terror.data %>% group_by(iyear,country_txt) %>% summarise(Count=n())
terror.countries$iso_code <- countrycode::countrycode(terror.countries$country_txt,origin = "country.name",destination = "iso3c")
terror.countries
# data visualization
Map  <- joinCountryData2Map(terror.countries, joinCode = "ISO3", nameJoinColumn = "iso_code")
mapCountryData(Map, nameColumnToPlot="Count", catMethod = "fixwidth",missingCountryCol = gray(.8))
# data cleaning
terror.type <- terror.data %>% group_by(iyear,attacktype1_txt) %>% summarise(count=n())
terror.type
change.rate = terror.type %>%
group_by(attacktype1_txt) %>%
arrange(attacktype1_txt) %>%
mutate(Diff_year = iyear - lag(iyear),
Diff_growth = count - lag(count),
Rate_percent = (Diff_growth / Diff_year)/lag(count) * 100)
change.rate[is.na(change.rate)]=0
change.rate
# data visualization
ggplot(change.rate) + geom_line(aes(x=iyear,y=Rate_percent,color=attacktype1_txt),stat="identity")+facet_wrap(~attacktype1_txt)+xlab("Year")+ylab("Percentage of Change in %")+labs(color='Attack Type')
# data cleaning
terror.general <- terror.data[terror.data$iyear==2016,] %>% group_by(country_txt,region_txt) %>% summarise(Attacks = n(), Kills = sum(nkill), Success.Rate = sum(success)/n())
terror.general
# data visualization: number of kills against number of attacks using log10 expansion
ggplot(terror.general, aes(x=Attacks, y = Kills, size = Success.Rate, color = region_txt)) + geom_point(alpha=0.7) +scale_x_log10()+scale_y_log10()+labs(color="Region",size="Success Rate")+xlab("Number of attacks")+ylab("Number of Kills")
# data cleaning
#terror.data$Decade <- terror.data$iyear - terror.data$iyear %% 10
terror.target <- terror.data %>% group_by(iyear,targtype1_txt) %>% summarise(Count=n())
#terror.target$iyear <- as.character(terror.target$iyear)
terror.target
# data visualization
ggplot(terror.target, aes(x = 1, y = Count, fill = targtype1_txt))+
geom_col(position = "fill",
show.legend = T) +
coord_polar(theta = "y") +
theme_void()+transition_time(iyear)+labs(fill='Target Type')
# data cleaning
terror.weapon <- terror.data %>% group_by(weaptype1_txt) %>% summarise(count=n(),averageKills=sum(nkill)/n()) %>% filter(count>10)
terror.weapon
# data visualization
ggplot(terror.weapon) + geom_bar(aes(x=reorder(weaptype1_txt,averageKills),y=averageKills),stat="identity",fill="red")+coord_flip()+xlab("Number of Kills per Attack")+ylab("Weapon Type")
library(shiny); source('3702SA1Team9/runApp.R')
runApp('Project')
source('3702SA1Team9/runApp.R')
library(shiny); source('3702SA1Team9/runApp.R')
source('3702SA1Team9/runApp.R')
source('3702SA1Team9/runApp.R')
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
US
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
US
Global
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge(US,Global,Israel,by="date")
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all
View(all)
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
View(all)
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all$date <- as.date(all$date)
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all$date <- as.Date(all$date)
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all$date <- as.Date(all$date,"%d.%m.%Y")
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all$date <- as.Date(all$date,"%d/%m/%Y")
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all$date <- as.POSIXct(all$date,"%d/%m/%Y")
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all$date <- as.Date(all$date,"%d/%m/%Y")
library(dplyr)
library(ggplot2)
library(lubridate)
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all$date <- dmy(all$date)
all
ggplot(all) +
geom_line(aes(x=date,y=" GDP Per Capita (US $) - Isarael"),stat="identity",color="red")
ggplot(all) +
geom_line(aes(x=date,y="GDP Per Capita (US $) - Isarael"),stat="identity",color="red")
ggplot(all) +
geom_line(aes(x=date,y="GDP.Per.Capita..US......US"),stat="identity",color="red")
ggplot(all) +
geom_line(aes(x=date,y="GDP.Per.Capita..US......US"),color="red")
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all$date <- year(all$date)
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all$date <- dmy(all$date)
colnames(all)<-c("Year","US.GDPperCapita","US.growth.rate","Israel.GDPperCapita","Israel.growth.rate","Global.GDPperCapita","Global.growth.rate")
ggplot(all) +
geom_line(aes(x=date,y="US.GDPperCapita"),color="red")
ggplot(all) +
geom_line(aes(x=Year,y="US.GDPperCapita"),color="red")
ggplot(all) +
geom_line(aes(x="Year",y="US.GDPperCapita"),color="red")
ggplot(all) +
geom_line(aes(x=Year,y="US.GDPperCapita"),color="red")
ggplot(all) +
geom_line(aes(x=Year,y="US.GDPperCapita"),stat="identity",color="red")
ggplot(all) +
geom_bar(aes(x=Year,y="US.GDPperCapita"),stat="identity",color="red")
str(all)
library(dbplyr)
library(tidyr)
library(readr)
library(tidyverse)
library(ggplot2)
library(ggmap)
library(gganimate)
library(lubridate)
library(readxl)
library(reshape2)
library(mapview)
library(rworldmap)
library(countrycode)
tier <- data%>%group_by(CityTier)%>%summarize(Stay=sum(Churn==0),Leave=sum(Churn==1))%>%melt()
library(dbplyr)
library(tidyr)
library(readr)
library(tidyverse)
library(ggplot2)
library(ggmap)
library(gganimate)
library(lubridate)
library(readxl)
library(reshape2)
library(mapview)
library(rworldmap)
library(countrycode)
churn <- readxl::read_excel("/Users/elianasong/Desktop/y3s1/DBA3702/Past Year Paper/PYP2021/Churn Data.xlsx")
data <- readxl::read_excel("/Users/elianasong/Desktop/y3s1/DBA3702/Past Year Paper/PYP2021/Churn Data.xlsx",sheet=2)
data
#check which columns have NA values
df <- as.data.frame(
cbind(
lapply(
lapply(data, is.na), sum)
)
)
rownames(subset(df, df$V1 != 0))
# customer ID: no need for calculation, convert int to chr
data$CustomerID <- as.character(data$CustomerID)
# churn (leave): 1 - customer leave (T), 0 - customer stay (F)
data$Churn <- as.logical(data$Churn)
# preferred login device: convert chr to factor
data$PreferredLoginDevice <- as.factor(data$PreferredLoginDevice)
# city tier: convert integer to factor as 1/2/3 represents level of the cities
data$CityTier<-as.factor(data$CityTier)
# preferred payment mode: convert abbreviation to full categories (CC: Credit card; COD: Cash on delivery); convert chr to factor
data$PreferredPaymentMode[data$PreferredPaymentMode=="CC"]<-"Credit Card"
data$PreferredPaymentMode[data$PreferredPaymentMode=="COD"]<-"Cash on Delivery"
data$PreferredPaymentMode<-as.factor(data$PreferredPaymentMode)
# gender: convert chr to factor
data$Gender <- as.factor(data$Gender)
# preferred order category: convert Mobile to Mobile phone; convert chr to factor
data$PreferedOrderCat[data$PreferedOrderCat=="Mobile"]<-"Mobile Phone"
data$PreferedOrderCat <- as.factor(data$PreferedOrderCat)
# marital status: convert chr to factor
data$MaritalStatus <- as.factor(data$MaritalStatus)
# complain: 0 - no complain (F), 1 - complain (T)
data$Complain <- as.logical(data$Complain)
# order amount hike from last year: assume NA value is because this year is the first year of order, convert NA to 0
data$OrderAmountHikeFromlastYear[is.na(data$OrderAmountHikeFromlastYear)]<-0
# day since last order: assume this is the first order, convert NA to 0
data$DaySinceLastOrder[is.na(data$DaySinceLastOrder)]<-0
summary(data)
plotChurnRate1<-function(data,var){
df <- group_by_(data,var)%>%summarize(ChurnRate=sum(Churn)/n())
plot <-  df %>% ggplot(aes_string(var, "ChurnRate", fill = var))+
geom_bar(stat = "identity")
return(plot)
}
plotChurnRate1(data,"PreferedOrderCat")
tier <- data%>%group_by(CityTier)%>%summarize(Stay=sum(Churn==0),Leave=sum(Churn==1))%>%melt()
ggplot(tier)+geom_bar(aes(x=CityTier,y=ifelse(variable=="Stay",value,-value),fill=variable),stat="identity",width=0.5)
plotChurnRate2<-function(data,var){
df2 <- group_by_(data, var)  %>% summarise(ChurnRate = sum(Churn)/n(), count= n())%>% filter(count >=20)
plot <- df2 %>% ggplot(aes_string(var, "ChurnRate"))+ geom_point() + geom_smooth(method = "lm")
return(plot)
}
plotChurnRate2(data,"Tenure")
# assumption: preferred payment mode and city tier
data %>% ggplot(aes(PreferredPaymentMode, fill = CityTier)) + geom_bar(position = "fill") + labs(y="proportion")
data2 <- read.csv("/Users/elianasong/Desktop/y3s1/DBA3702/Past Year Paper/PYP2021/Largest Companies in the World.csv")
top <- data2 %>% group_by(Country) %>% summarise(Total.Market.Value=sum(Market.Value...billion.))
top <- top[order(-top$Total.Market.Value),]
top$Cum <- cumsum(top$Total.Market.Value)
ggplot(top, aes(x=reorder(Country,-Total.Market.Value))) +geom_bar(aes(y=Total.Market.Value), fill='blue', stat="identity") +geom_point(aes(y=Cum), color = rgb(0, 1, 0), size=1)+ geom_path(aes(y=Cum, group=1), colour="slateblue1", lty=3, size=0.9) +theme(axis.text.x = element_text(angle=90, vjust=0.6))
top10 <- as.vector(head(top$Country,10))
company <- data2[data2$Country%in%top10,]
topcompany <- company %>% group_by(Country, Company) %>% summarise(Market.Value.Billion = max(Market.Value...billion.),Continent = Continent, Location = Location)
topcompany <- topcompany[order(-topcompany$Market.Value.Billion),]%>%group_by(Country)%>%slice(1:1)
topcompany <- separate(topcompany, Location, into = c("lat", "long"), sep = ",")
topcompany$lat <- gsub("\\(", "", topcompany$lat) %>% as.numeric()
topcompany$long <- gsub("\\)", "", topcompany$long) %>% as.numeric()
mapview(topcompany,xcol="long",ycol="lat",crs=4326,grid=F)
topcountry <- data2%>%group_by(Country)%>%summarise(count=n())
topcountry$iso_code <- countrycode::countrycode(topcountry$Country,origin = "country.name",destination = "iso3c")
Map  <- joinCountryData2Map(topcountry, joinCode = "ISO3", nameJoinColumn = "iso_code")
mapCountryData(Map, nameColumnToPlot="count", catMethod = "fixwidth",missingCountryCol = gray(.8))
tier
data%>%group_by(CityTier)%>%summarize(Stay=sum(Churn==0),Leave=sum(Churn==1))
library(dplyr)
library(ggplot2)
library(lubridate)
library(reshape2)
melt(all)
library(dplyr)
library(ggplot2)
library(lubridate)
library(reshape2)
library(tidyr)
all%>%gather(key,value,-Year)
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all <- all[,c(1,2,4,6)]
all$date <- dmy(all$date)
colnames(all)<-c("Year","US.GDPperCapita","US.growth.rate","Israel.GDPperCapita","Israel.growth.rate","Global.GDPperCapita","Global.growth.rate")
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all <- all[,c(1,2,4,6)]
all$date <- dmy(all$date)
all%>%gather(key,value,-Year)
all%>%gather(key,value,-date)
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all <- all[,c(1,2,4,6)]%>%gather(key,value,-date)
all$date <- dmy(all$date)
ggplot(data=all, aes(x=key, y=value, group=date)) +
geom_line()
ggplot(data=all, aes(x=date, y=value, group=key)) +
geom_line()
ggplot(data=all, aes(x=date, y=value, group=key,color=key)) +
geom_line()
library(dplyr)
library(ggplot2)
library(lubridate)
library(reshape2)
library(tidyr)
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all <- all[,c(1,2,4,6)]%>%gather(key,value,-date)
all$date <- dmy(all$date)
library(dplyr)
library(ggplot2)
library(lubridate)
library(reshape2)
library(tidyr)
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all <- all[,c(1,2,4,6)]%>%gather(key,value,-date)
all$date <- dmy(all$date)
ggplot(data=all, aes(x=date, y=value, group=key,color=key)) +
geom_line()
ggplot(data=all, aes(x=date, y=value, group=key,color=key)) +
geom_bar()
ggplot(data=all, aes(x=date, y=value, group=key,color=key)) +
geom_line()
library(dplyr)
library(ggplot2)
library(lubridate)
library(reshape2)
library(tidyr)
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all <- all[,c(1,2,4,6)]%>%gather(key,value,-date)
all$date <- dmy(all$date)
ggplot(data=all, aes(x=date, y=value, group=key)) +
geom_line()
library(dplyr)
library(ggplot2)
library(lubridate)
library(reshape2)
library(tidyr)
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all <- all[,c(1,2,4,6)]%>%gather(key,value,-date)
all$date <- dmy(all$date)
ggplot(data=all, aes(x=date, y=value, group=key,color=key)) +
geom_line()
ggplot(data=all, aes(x=date, y=value, group=key,color=key)) +
geom_density()
library(dplyr)
library(ggplot2)
library(lubridate)
library(reshape2)
library(tidyr)
US <- read.csv("/Users/elianasong/Desktop/united-states-gdp-per-capita.csv")
Israel <- read.csv("/Users/elianasong/Desktop/israel-gdp-per-capita.csv")
Global <- read.csv("/Users/elianasong/Desktop/world-gdp-per-capita.csv")
all <- merge( merge(US, Israel, by = "date", all = TRUE ), Global, by = "date", all = TRUE )
all <- all[,c(1,2,4,6)]%>%gather(key,value,-date)
all$date <- dmy(all$date)
ggplot(data=all, aes(x=date, y=value, group=key,color=key)) +
geom_line()
